use('IoT_PropertyData');

// Area 4 is the Kitchen on floor 0

//get the lables of all appliances per area/room:
//db.Appliances.find({area_id:4},{label:1, _id:0}).explain()

//get the lables of all appliances per floor:
/*
db.Appliances.aggregate(
    [
        {
            $lookup: {
              from: 'Rooms',
              localField: 'area_id',
              foreignField: 'area_id',
              as: 'Room'
            }
        },
        {
            $match: {'Room.floor': 1}
        },
        {
            $project: {label:1, _id:0}
        }
    ]
)
*/

//get total usage per room in a day
db.ApplianceUsage.aggregate(
    [
        {
            $lookup: {
              from: 'Appliances',
              localField: 'appliance_id',
              foreignField: 'label',
              as: 'appliance'
            }
        },
        { 
            $unwind: '$appliance'
        },
        {
            $match: {'appliance.area_id':4}
        },
        {
            $group: {
                _id: { day: {$dayOfYear: "$usageStart"}, year:{$year: "$usageStart"}, room:"$appliance.area_id"},
                totalUsage: { $sum: { $multiply: ["$usageInterval", "$appliance.consumption"]}},
                count: {$sum: 1}
            }
        }
    ]
)


//get the room with the most usage in an year
/*
db.ApplianceUsage.aggregate(
    [
        {
            $lookup: {
              from: 'Appliances',
              localField: 'appliance_id',
              foreignField: 'label',
              as: 'appliance'
            }
        },
        { 
            $unwind: '$appliance'
        },
        {
            $group: {
                _id: { year:{$year: "$usageStart"}, room: "$appliance.area_id"},    
                totalUsage: { $sum: { $multiply: ["$usageInterval", "$appliance.consumption"]}},
                count: {$sum: 1}
            }
        },
        {$sort: {"totalUsage":-1}},{$limit:1}
    ]
)
*/


//get the coldest area in the house per day
/*
db.SensorReadings.aggregate(
    [   
        {
            $lookup: {
              from: 'Sensors',
              localField: 'sensor_id',
              foreignField: 'sensor_id',
              as: 'sensor'
            }
        },
        { 
            $unwind: '$sensor'
        },
        {
            $match: {'sensor.type':"TMP36"}
        },
        {
            $group: {
                _id: { day: {$dayOfYear: "$timeStamp"}, year:{$year: "$timeStamp"}, area:"$sensor.area_id" },
                avg_temp: {$avg: "$reading"},
            }
        },
        {$sort: {"avg_temp":1}},{$limit:1}
    ]
)
*/


